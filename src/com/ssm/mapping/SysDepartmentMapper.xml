<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.mapper.SysDepartmentMapper" >
  <resultMap id="BaseResultMap" type="com.ssm.po.SysDepartment" >
    <id column="DEPARTMENT_ID" property="departmentId" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="NAME_EN" property="nameEn" jdbcType="VARCHAR" />
    <result column="BIANMA" property="bianma" jdbcType="VARCHAR" />
    <result column="PARENT_ID" property="parentId" jdbcType="VARCHAR" />
    <result column="BZ" property="bz" jdbcType="VARCHAR" />
    <result column="HEADMAN" property="headman" jdbcType="VARCHAR" />
    <result column="TEL" property="tel" jdbcType="VARCHAR" />
    <result column="FUNCTIONS" property="functions" jdbcType="VARCHAR" />
    <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    DEPARTMENT_ID, NAME, NAME_EN, BIANMA, PARENT_ID, BZ, HEADMAN, TEL, FUNCTIONS, ADDRESS
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ssm.po.SysDepartmentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_department
    where DEPARTMENT_ID = #{departmentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_department
    where DEPARTMENT_ID = #{departmentId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.po.SysDepartmentExample" >
    delete from sys_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.po.SysDepartment" >
    insert into sys_department (DEPARTMENT_ID, NAME, NAME_EN, 
      BIANMA, PARENT_ID, BZ, 
      HEADMAN, TEL, FUNCTIONS, 
      ADDRESS)
    values (#{departmentId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{nameEn,jdbcType=VARCHAR}, 
      #{bianma,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{bz,jdbcType=VARCHAR}, 
      #{headman,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{functions,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.po.SysDepartment" >
    insert into sys_department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="departmentId != null" >
        DEPARTMENT_ID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="nameEn != null" >
        NAME_EN,
      </if>
      <if test="bianma != null" >
        BIANMA,
      </if>
      <if test="parentId != null" >
        PARENT_ID,
      </if>
      <if test="bz != null" >
        BZ,
      </if>
      <if test="headman != null" >
        HEADMAN,
      </if>
      <if test="tel != null" >
        TEL,
      </if>
      <if test="functions != null" >
        FUNCTIONS,
      </if>
      <if test="address != null" >
        ADDRESS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="departmentId != null" >
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nameEn != null" >
        #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="bianma != null" >
        #{bianma,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="bz != null" >
        #{bz,jdbcType=VARCHAR},
      </if>
      <if test="headman != null" >
        #{headman,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="functions != null" >
        #{functions,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.po.SysDepartmentExample" resultType="java.lang.Integer" >
    select count(*) from sys_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_department
    <set >
      <if test="record.departmentId != null" >
        DEPARTMENT_ID = #{record.departmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.nameEn != null" >
        NAME_EN = #{record.nameEn,jdbcType=VARCHAR},
      </if>
      <if test="record.bianma != null" >
        BIANMA = #{record.bianma,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        PARENT_ID = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.bz != null" >
        BZ = #{record.bz,jdbcType=VARCHAR},
      </if>
      <if test="record.headman != null" >
        HEADMAN = #{record.headman,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        TEL = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.functions != null" >
        FUNCTIONS = #{record.functions,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_department
    set DEPARTMENT_ID = #{record.departmentId,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      NAME_EN = #{record.nameEn,jdbcType=VARCHAR},
      BIANMA = #{record.bianma,jdbcType=VARCHAR},
      PARENT_ID = #{record.parentId,jdbcType=VARCHAR},
      BZ = #{record.bz,jdbcType=VARCHAR},
      HEADMAN = #{record.headman,jdbcType=VARCHAR},
      TEL = #{record.tel,jdbcType=VARCHAR},
      FUNCTIONS = #{record.functions,jdbcType=VARCHAR},
      ADDRESS = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.po.SysDepartment" >
    update sys_department
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nameEn != null" >
        NAME_EN = #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="bianma != null" >
        BIANMA = #{bianma,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        PARENT_ID = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="bz != null" >
        BZ = #{bz,jdbcType=VARCHAR},
      </if>
      <if test="headman != null" >
        HEADMAN = #{headman,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        TEL = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="functions != null" >
        FUNCTIONS = #{functions,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where DEPARTMENT_ID = #{departmentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.po.SysDepartment" >
    update sys_department
    set NAME = #{name,jdbcType=VARCHAR},
      NAME_EN = #{nameEn,jdbcType=VARCHAR},
      BIANMA = #{bianma,jdbcType=VARCHAR},
      PARENT_ID = #{parentId,jdbcType=VARCHAR},
      BZ = #{bz,jdbcType=VARCHAR},
      HEADMAN = #{headman,jdbcType=VARCHAR},
      TEL = #{tel,jdbcType=VARCHAR},
      FUNCTIONS = #{functions,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR}
    where DEPARTMENT_ID = #{departmentId,jdbcType=VARCHAR}
  </update>
</mapper>