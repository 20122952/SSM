<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.mapper.SysRoleMapper">
	<resultMap id="BaseResultMap" type="com.ssm.po.SysRole">
		<id column="ROLE_ID" property="roleId" jdbcType="VARCHAR" />
		<result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
		<result column="RIGHTS" property="rights" jdbcType="VARCHAR" />
		<result column="PARENT_ID" property="parentId" jdbcType="VARCHAR" />
		<result column="ADD_QX" property="addQx" jdbcType="VARCHAR" />
		<result column="DEL_QX" property="delQx" jdbcType="VARCHAR" />
		<result column="EDIT_QX" property="editQx" jdbcType="VARCHAR" />
		<result column="CHA_QX" property="chaQx" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ROLE_ID, ROLE_NAME, RIGHTS, PARENT_ID, ADD_QX, DEL_QX, EDIT_QX, CHA_QX
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.ssm.po.SysRoleExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from sys_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from sys_role
		where ROLE_ID = #{roleId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from sys_role
		where ROLE_ID = #{roleId,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.ssm.po.SysRoleExample">
		delete from sys_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.ssm.po.SysRole">
		insert into sys_role (ROLE_ID, ROLE_NAME, RIGHTS,
		PARENT_ID, ADD_QX, DEL_QX,
		EDIT_QX, CHA_QX)
		values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR},
		#{rights,jdbcType=VARCHAR},
		#{parentId,jdbcType=VARCHAR}, #{addQx,jdbcType=VARCHAR}, #{delQx,jdbcType=VARCHAR},
		#{editQx,jdbcType=VARCHAR}, #{chaQx,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.ssm.po.SysRole">
		insert into sys_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				ROLE_ID,
			</if>
			<if test="roleName != null">
				ROLE_NAME,
			</if>
			<if test="rights != null">
				RIGHTS,
			</if>
			<if test="parentId != null">
				PARENT_ID,
			</if>
			<if test="addQx != null">
				ADD_QX,
			</if>
			<if test="delQx != null">
				DEL_QX,
			</if>
			<if test="editQx != null">
				EDIT_QX,
			</if>
			<if test="chaQx != null">
				CHA_QX,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				#{roleId,jdbcType=VARCHAR},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="rights != null">
				#{rights,jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				#{parentId,jdbcType=VARCHAR},
			</if>
			<if test="addQx != null">
				#{addQx,jdbcType=VARCHAR},
			</if>
			<if test="delQx != null">
				#{delQx,jdbcType=VARCHAR},
			</if>
			<if test="editQx != null">
				#{editQx,jdbcType=VARCHAR},
			</if>
			<if test="chaQx != null">
				#{chaQx,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.ssm.po.SysRoleExample"
		resultType="java.lang.Integer">
		select count(*) from sys_role
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update sys_role
		<set>
			<if test="record.roleId != null">
				ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
			</if>
			<if test="record.roleName != null">
				ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
			</if>
			<if test="record.rights != null">
				RIGHTS = #{record.rights,jdbcType=VARCHAR},
			</if>
			<if test="record.parentId != null">
				PARENT_ID = #{record.parentId,jdbcType=VARCHAR},
			</if>
			<if test="record.addQx != null">
				ADD_QX = #{record.addQx,jdbcType=VARCHAR},
			</if>
			<if test="record.delQx != null">
				DEL_QX = #{record.delQx,jdbcType=VARCHAR},
			</if>
			<if test="record.editQx != null">
				EDIT_QX = #{record.editQx,jdbcType=VARCHAR},
			</if>
			<if test="record.chaQx != null">
				CHA_QX = #{record.chaQx,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update sys_role
		set ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
		ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
		RIGHTS = #{record.rights,jdbcType=VARCHAR},
		PARENT_ID = #{record.parentId,jdbcType=VARCHAR},
		ADD_QX = #{record.addQx,jdbcType=VARCHAR},
		DEL_QX = #{record.delQx,jdbcType=VARCHAR},
		EDIT_QX = #{record.editQx,jdbcType=VARCHAR},
		CHA_QX = #{record.chaQx,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.ssm.po.SysRole">
		update sys_role
		<set>
			<if test="roleName != null">
				ROLE_NAME = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="rights != null">
				RIGHTS = #{rights,jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				PARENT_ID = #{parentId,jdbcType=VARCHAR},
			</if>
			<if test="addQx != null">
				ADD_QX = #{addQx,jdbcType=VARCHAR},
			</if>
			<if test="delQx != null">
				DEL_QX = #{delQx,jdbcType=VARCHAR},
			</if>
			<if test="editQx != null">
				EDIT_QX = #{editQx,jdbcType=VARCHAR},
			</if>
			<if test="chaQx != null">
				CHA_QX = #{chaQx,jdbcType=VARCHAR},
			</if>
		</set>
		where ROLE_ID = #{roleId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ssm.po.SysRole">
		update sys_role
		set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
		RIGHTS = #{rights,jdbcType=VARCHAR},
		PARENT_ID = #{parentId,jdbcType=VARCHAR},
		ADD_QX = #{addQx,jdbcType=VARCHAR},
		DEL_QX = #{delQx,jdbcType=VARCHAR},
		EDIT_QX = #{editQx,jdbcType=VARCHAR},
		CHA_QX = #{chaQx,jdbcType=VARCHAR}
		where ROLE_ID = #{roleId,jdbcType=VARCHAR}
	</update>
</mapper>